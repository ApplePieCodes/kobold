#include <stdint.h>

#define KeyboardAlt 0b00000001
#define KeyboardCtrl 0b00000010
#define KeyboardShift 0b00000100
#define KeyboardSuper 0b00001000
#define KeyPressed 0b00010000
#define KeyReleased 0b00100000

typedef enum key {
    A,
    Add,
    B,
    Backslash,
    Backspace,
    BackTick,
    C,
    CapsLock,
    Clear,
    CloseBracket,
    Comma,
    D,
    D0,
    D1,
    D2,
    D3,
    D4,
    D5,
    D6,
    D7,
    D8,
    D9,
    Decimal,
    Delete,
    Divide,
    DownArrow,
    E,
    End,
    Enter,
    Equals,
    Escape,
    Execute,
    F,
    F1,
    F10,
    F11,
    F12,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F2,
    F20,
    F21,
    F22,
    F23,
    F24,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    ForwardSlash,
    G,
    H,
    Help,
    Home,
    I,
    Insert,
    J,
    K,
    Keypad0,
    Keypad1,
    Keypad2,
    Keypad3,
    Keypad4,
    Keypad5,
    Keypad6,
    Keypad7,
    Keypad8,
    Keypad9,
    KeypadDot,
    KeypadMinus,
    KeypadPlus,
    KeypadStar,
    L,
    LeftAlt,
    LeftArrow,
    LeftControl,
    LeftShift,
    LeftSuper,
    M,
    Minus,
    Multiply,
    N,
    None,
    NumLock,
    NumPad0,
    NumPad1,
    NumPad2,
    NumPad3,
    NumPad4,
    NumPad5,
    NumPad6,
    NumPad7,
    NumPad8,
    NumPad9,
    O,
    OpenBracket,
    P,
    PageDown,
    PageUp,
    Pause,
    Period,
    Print,
    PrintScreen,
    Q,
    R,
    RightArrow,
    RightShift,
    RightSuper,
    S,
    ScrollLock,
    Select,
    Semicolon,
    Separator,
    SingleQuote,
    Space,
    Spacebar,
    Subtract,
    T,
    Tab,
    U,
    UpArrow,
    V,
    W,
    X,
    Y,
    Z,
} key_t;

typedef struct keypress {
    key_t key;
    uint8_t modifiers;
} keypress_t;

void keyboardPushKey(key_t k, uint8_t modifiers);
keypress_t keyboardReadKey();